1)Find Second Largest in Array

#include <iostream>
using namespace std;

int main() {
    int arr[6] = {6, 11, 7, 4, 8, 9};
    int maxi = arr[0];
    int secondmaxi = INT_MIN;

    for (int i = 0; i < 6; i++) {
        if (arr[i] > maxi) {
            secondmaxi = maxi;
            maxi = arr[i];
        }
        else if (arr[i] > secondmaxi && arr[i] != maxi) {
            secondmaxi = arr[i];
        }
    }

    cout << "Largest: " << maxi << endl;
    cout << "Second Largest: " << secondmaxi << endl;
}

2) REVERSE AN ARRAY

#include <iostream>
using namespace std;

int main() {
    int arr[6] = {6, 11, 7, 4, 8, 9};
    int i = 0, j = 5;

    while (i < j) {
        swap(arr[i], arr[j]);
        i++;
        j--;
    }

    for (int k = 0; k < 6; k++) {
        cout << arr[k] << " ";
    }
}

3) ALPHABETS ARRAY

#include <iostream>
using namespace std;

int main() {
    char arr[26];

    for (int i = 0; i < 26; i++) {
        arr[i] = 'a' + i;
    }

    for (int i = 0; i < 26; i++) {
        cout << arr[i] << " ";
    }

    return 0;
}

4)LINEAR SEARCH


#include <iostream>
using namespace std;

int main() {
    int arr[5] = {4, 6, 8, 2, 10};

    for (int i = 0; i < 5; i++) {
        if (arr[i] == 8) {
            cout << "Element found at index: " << i;
            return 0;
        }
    }

    cout << "-1 (Element not found)";
    return 0;
}

4)SUM OF ARRAY ELEMENTS


#include <iostream>
using namespace std;

int main() {
    int arr[20];
    int sum = 0;

    for (int i = 0; i < 20; i++) {
        cin >> arr[i];
        sum += arr[i];
    }

    cout << "Sum: " << sum;
}
5)MINIMUM ELEMENT IN AN ARRAY

#include <iostream>
using namespace std;

int main() {
    int arr[5] = {4, 6, 8, 2, 10};

    int minElement = arr[0];
    for (int i = 0; i < 5; i++) {
        if (arr[i] < minElement) {
            minElement = arr[i];
        }
    }

    cout << "Minimum element is " << minElement;
}

6)ROTATE BY ONE 

#include <iostream>
using namespace std;

void rotateByOne(int arr[], int n) {
    int temp = arr[n - 1]; // last element store
    for (int i = n - 1; i > 0; i--) {
        arr[i] = arr[i - 1]; // shift elements to right
    }
    arr[0] = temp; // last ko first pe daal do
}

int main() {
    int n;
    cout << "Enter size of array: ";
    cin >> n;
    
    int arr[n];
    cout << "Enter elements: ";
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }
    
    rotateByOne(arr, n);
    
    cout << "Array after rotation: ";
    for (int i = 0; i < n; i++) {
        cout << arr[i] << " ";
    }
    
    return 0;
}



